name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      tag:
        description: 'Release tag (e.g., v1.0.0)'
        required: true
        type: string

jobs:
  release:
    name: Create Release
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.23'
        cache: true
        
    - name: Download dependencies
      run: go mod download
      
    - name: Run tests
      run: go test ./...
      
    - name: Build binaries
      run: |
        # Build for multiple platforms
        GOOS=linux GOARCH=amd64 go build -ldflags="-s -w" -o mcpify-linux-amd64 ./cmd/server
        GOOS=linux GOARCH=arm64 go build -ldflags="-s -w" -o mcpify-linux-arm64 ./cmd/server
        GOOS=darwin GOARCH=amd64 go build -ldflags="-s -w" -o mcpify-darwin-amd64 ./cmd/server
        GOOS=darwin GOARCH=arm64 go build -ldflags="-s -w" -o mcpify-darwin-arm64 ./cmd/server
        GOOS=windows GOARCH=amd64 go build -ldflags="-s -w" -o mcpify-windows-amd64.exe ./cmd/server
        
    - name: Create checksums
      run: |
        sha256sum mcpify-* > checksums.txt
        
    - name: Get tag name
      id: get_tag
      run: |
        if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
          echo "tag=${{ github.event.inputs.tag }}" >> $GITHUB_OUTPUT
        else
          echo "tag=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
        fi
        
    - name: Create Release
      uses: softprops/action-gh-release@v2
      with:
        tag_name: ${{ steps.get_tag.outputs.tag }}
        name: Release ${{ steps.get_tag.outputs.tag }}
        draft: false
        prerelease: false
        files: |
          mcpify-*
          checksums.txt
        body: |
          ## Changes in ${{ steps.get_tag.outputs.tag }}
          
          See the [CHANGELOG](CHANGELOG.md) for detailed information about this release.
          
          ## Downloads
          
          Download the appropriate binary for your platform:
          
          - **Linux (amd64)**: `mcpify-linux-amd64`
          - **Linux (arm64)**: `mcpify-linux-arm64`
          - **macOS (amd64)**: `mcpify-darwin-amd64`
          - **macOS (arm64)**: `mcpify-darwin-arm64`
          - **Windows (amd64)**: `mcpify-windows-amd64.exe`
          
          ## Verification
          
          Verify the integrity of the downloaded binary using the checksums:
          
          ```bash
          sha256sum -c checksums.txt
          ```
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
