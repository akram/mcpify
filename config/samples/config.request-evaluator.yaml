# Example configuration demonstrating the new RequestEvaluator with request.* syntax
# This shows how to extract values from headers, query parameters, and form data

transport: "http"
port: 8080
host: "localhost"

# OpenAPI configuration
openapi:
  spec: "https://api.example.com/openapi.json"
  timeout: 30s
  max_retries: 3
  rate_limit: 100

  # Headers configuration using the new request.* syntax
  headers:
    - header:
        name: "User-Agent"
        value: "MCPify/2.0.0"
    - header:
        name: "Authorization"
        # Extract from incoming request headers
        valueFrom: "request.headers['authorization']"
    - header:
        name: "X-API-Key"
        # Extract from query parameters
        valueFrom: "request.query['apikey']"
    - header:
        name: "X-Client-ID"
        # Extract from form data
        valueFrom: "request.form['client_id']"
    - header:
        name: "X-Forwarded-For"
        # Extract from headers with case-insensitive matching
        valueFrom: "request.headers['x-forwarded-for']"
    - header:
        name: "X-Extracted-Token"
        # Extract nested value from JSON in header
        valueFrom: "request.headers['x-mcpify-provider-data'].token"
    - header:
        name: "X-Auth-Key"
        # Extract deeply nested value from JSON in header
        valueFrom: "request.headers['x-mcpify-provider-data'].auth.api_key"
    - header:
        name: "X-Client-Secret"
        # Extract nested value from JSON in query parameter
        valueFrom: "request.query['client_data'].secret"
    - header:
        name: "X-User-Name"
        # Extract nested value from JSON in form data
        valueFrom: "request.form['user_data'].name"

  # Authentication configuration
  auth:
    type: "bearer"
    token: "your-api-token"
    
    # Auth headers can also use request.* syntax
    headers:
      - header:
          name: "X-Auth-Source"
          # Extract from incoming request to determine auth method
          valueFrom: "request.headers['x-auth-source']"
      - header:
          name: "X-Tenant-ID"
          # Extract tenant from query parameter
          valueFrom: "request.query['tenant']"
      - header:
          name: "X-Session-Token"
          # Extract session token from form data
          valueFrom: "request.form['session_token']"

# Example usage scenarios:
#
# 1. Simple header forwarding:
#    Incoming: Authorization: Bearer abc123
#    Outgoing: Authorization: Bearer abc123
#
# 2. Query parameter to header:
#    Incoming: ?apikey=sk-1234567890
#    Outgoing: X-API-Key: sk-1234567890
#
# 3. Form data to header:
#    Incoming: client_id=client-abc123
#    Outgoing: X-Client-ID: client-abc123
#
# 4. Nested JSON extraction from header:
#    Incoming: X-Mcpify-Provider-Data: {"token": "extracted-token", "auth": {"api_key": "key-xyz"}}
#    Outgoing: X-Extracted-Token: extracted-token, X-Auth-Key: key-xyz
#
# 5. Nested JSON extraction from query parameter:
#    Incoming: ?client_data={"secret": "secret-123", "id": "client-456"}
#    Outgoing: X-Client-Secret: secret-123
#
# 6. Nested JSON extraction from form data:
#    Incoming: user_data={"name": "John Doe", "email": "john@example.com"}
#    Outgoing: X-User-Name: John Doe
#
# 7. Case-insensitive header matching:
#    Incoming: X-Forwarded-For: 192.168.1.1
#    Outgoing: X-Forwarded-For: 192.168.1.1
#
# 8. Missing values:
#    If a requested value is not found, the header is simply omitted
#    (no error is thrown, graceful degradation)
